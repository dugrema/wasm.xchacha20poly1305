[package]
name = "wasm-xchacha20poly1305"
version = "0.3.1"
authors = ["Mathieu Dugre <mathieu.dugre@mdugre.info>"]
edition = "2021"
description = "WASM wrapper of the chacha20poly1305 library in rust"
documentation = "https://github.com/dugrema/wasm.xchacha20poly1305"
homepage = "https://github.com/dugrema/wasm.xchacha20poly1305"
keywords = ["wasm", "chacha20", "xchacha20", "poly1305", "encryption", "aead"]
license = "MIT"

[lib]
crate-type = ["cdylib", "rlib"]

[features]
# default = ["console_error_panic_hook"]

[dependencies]
js-sys = "0.3.55"
serde = { version = "1.0", features = ["derive"] }
wasm-bindgen = { version = "0.2.63", features = ["serde-serialize"] }
wasm-bindgen-futures = "0.4.28"
web-log = "1.0.0"

# chacha20poly1305 = { version= "0.9.0", features = ["stream"] }

# The `console_error_panic_hook` crate provides better debugging of panics by
# logging them with `console.error`. This is great for development, but requires
# all the `std::fmt` and `std::panicking` infrastructure, so isn't great for
# code size when deploying.
# console_error_panic_hook = { version = "0.1.6", optional = true }

# `wee_alloc` is a tiny allocator for wasm that is only ~1K in code size
# compared to the default allocator's ~10K. It is slower than the default
# allocator, however.
#
# Unfortunately, `wee_alloc` requires nightly Rust when targeting wasm for now.
# wee_alloc = { version = "0.4.5", optional = true }

aead = { version = "0.4", default-features = false, features = ['alloc'] }
chacha20 = { version = "0.8", features = ["zeroize"] }
cipher = "0.3"
poly1305 = "0.7"
zeroize = { version = ">=1, <1.5", default-features = false }

[dev-dependencies]
aead = { version = "0.4", features = ["dev"], default-features = false }
wasm-bindgen-test = "0.3.13"

[profile.release]
# Tell `rustc` to optimize for small code size.
opt-level = "s"
